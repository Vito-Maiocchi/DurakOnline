server.cpp:
- clean up the code

msg_handler.cpp:
- complete ClientActionEvent -> it should call a function from game handleClientActionEvent()
- check the logic of ClientActionEvent
- check the logic of PlayCardEvent msg
- find a way to deal with ClientDisconnectEvent
- clean up the code -> good comments 

game.cpp:
- test all functions with google tests in Test/test_game.cpp, use `ctest` to run
- implement all messages to be sent from the game. i.e. (GameStateUpdate, PlayerUpdate)
- finish the implementation of the other functions

battle.cpp:
- test all functions with google tests in Test/test_battle.cpp, use `ctest` to run
- implement all messages to be sent from the game. i.e. (IllegalMoveNotify, BattleStateUpdate,
AvailableActionUpdate)
- check logic and clean up code
- implement a data structure that will save the whoever attacked first

card_manager.cpp:
- implement all messages to be sent from the card_manager. i.e. (CardUpdate)
- 
